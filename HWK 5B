/******************************************************************************
Monte carlo Exercise for Hwk 5
*******************************************************************************/
#include <stdio.h>
#include <stdlib.h>
#include <time.h>

int main()
{
// number of runs that will go for "average of sev. executions"
// long int  says number of times that will generate a random x & y 
// pi up to 16 digits
double correct= 3.1415926535897932;
long int k=1000;
int runs=10;
int p;
// result of pi's
double pi_average;
for(p=1;p<= runs;p++)
    {
     
     
     //printf(" Enter the number of times to run: \n");
     //scanf("%li",&k);
     long int i;
     double x,y;
     double pi[runs];
     double final;
     
     // circle counts how many 'hits' fall within the circle area
     long int circle=0; 
     // defining random prior to running
     #define dran(u1) ((rand()/(double) RAND_MAX)*(u1))
     for (i=0;i<=k;i++)
        {
            x= dran(1.0);
            y=dran(1.0);
            if( x*x + y*y<=1)
            {
              // randoms fall within circle area and thus counts
             circle++;  
            }
        }    
     final= circle*4;
     pi[p]= final/(double)k;
     pi_average=pi_average+pi[p];
     //printf("The pi due to %li approximations is: %lf",k,pi);  
        printf(" pi # %d is: %lf \n", p, pi[p]);
    }
pi_average= pi_average/10;
printf("From %d trials and %li samples at each trial the average pi is %lf",runs, k, pi_average);
return 0;    
}

